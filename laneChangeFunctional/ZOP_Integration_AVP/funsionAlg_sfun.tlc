%% File : funsionAlg_sfun.tlc
%% Created : Thu Jan 28 20:48:51 2021
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "funsionAlg_sfun.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  funsionAlg_sfun "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output

  %if IsModelReferenceSimTarget() || CodeFormat == "S-Function" || ::isRAccel
    %assign hFileName = "funsionAlg_sfun_accel_wrapper"
    %assign hFileNameMacro = FEVAL("upper", hFileName)
    %openfile hFile = "%<hFileName>.h"
    %selectfile hFile
    #ifndef _%<hFileNameMacro>_H_
    #define _%<hFileNameMacro>_H_

    #include "tmwtypes.h"
    #ifdef __cplusplus
    extern "C" {
    #endif
    extern void funsionAlg_sfun_Start_wrapper_accel(void);
    extern void funsionAlg_sfun_Outputs_wrapper_accel(const void *In_RadarData_st, void *__In_RadarData_stBUS,
			const void *In_ARS308Data_st, void *__In_ARS308Data_stBUS,
			const void *In_VehicleData_st, void *__In_VehicleData_stBUS,
			const void *In_VisionObjData_st, void *__In_VisionObjData_stBUS,
			const void *In_VisionLaneData_st, void *__In_VisionLaneData_stBUS,
			const void *In_VisionRoadEdgeData_st, void *__In_VisionRoadEdgeData_stBUS,
			const uint16_T *In_ErrorFlag,
			void *Out_FusionObjInfo_st, void *__Out_FusionObjInfo_stBUS,
			void *Out_FusionLaneInfo_st, void *__Out_FusionLaneInfo_stBUS,
			void *Out_FusionRoadEdgeInfo_st, void *__Out_FusionRoadEdgeInfo_stBUS);
    extern void funsionAlg_sfun_Terminate_wrapper_accel(void);
    #ifdef __cplusplus
    }
    #endif
    #endif
    %closefile hFile

    %assign cFileName = "funsionAlg_sfun_accel_wrapper"
    %openfile cFile = "%<cFileName>.c"
    %selectfile cFile
    #include <string.h>
    #include "tmwtypes.h"
    #include "funsionAlg_sfun_bus.h"

    void funsionAlg_sfun_Start_wrapper_accel(void){
    funsionAlg_sfun_Start_wrapper();
    }
    void funsionAlg_sfun_Outputs_wrapper_accel(const void *In_RadarData_st, void *__In_RadarData_stBUS,
			const void *In_ARS308Data_st, void *__In_ARS308Data_stBUS,
			const void *In_VehicleData_st, void *__In_VehicleData_stBUS,
			const void *In_VisionObjData_st, void *__In_VisionObjData_stBUS,
			const void *In_VisionLaneData_st, void *__In_VisionLaneData_stBUS,
			const void *In_VisionRoadEdgeData_st, void *__In_VisionRoadEdgeData_stBUS,
			const uint16_T *In_ErrorFlag,
			void *Out_FusionObjInfo_st, void *__Out_FusionObjInfo_stBUS,
			void *Out_FusionLaneInfo_st, void *__Out_FusionLaneInfo_stBUS,
			void *Out_FusionRoadEdgeInfo_st, void *__Out_FusionRoadEdgeInfo_stBUS){

    %assign dTypeId = LibBlockInputSignalDataTypeId(0)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_RADAR_DATA_ST *) __In_RadarData_stBUS)", "(char *) In_RadarData_st", 0)>

    %assign dTypeId = LibBlockInputSignalDataTypeId(1)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_ARS308_DATA_ST *) __In_ARS308Data_stBUS)", "(char *) In_ARS308Data_st", 1)>

    %assign dTypeId = LibBlockInputSignalDataTypeId(2)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_VEHICLE_DATA_ST *) __In_VehicleData_stBUS)", "(char *) In_VehicleData_st", 2)>

    %assign dTypeId = LibBlockInputSignalDataTypeId(3)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_VISION_OBJ_DATA_ST *) __In_VisionObjData_stBUS)", "(char *) In_VisionObjData_st", 3)>

    %assign dTypeId = LibBlockInputSignalDataTypeId(4)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_EYEQ4_LANE_DATA_ST *) __In_VisionLaneData_stBUS)", "(char *) In_VisionLaneData_st", 4)>

    %assign dTypeId = LibBlockInputSignalDataTypeId(5)
    %<SLibAssignSLStructToUserStruct(dTypeId, "(*(FUS_EYEQ4_ROADEDGE_DATA_ST *) __In_VisionRoadEdgeData_stBUS)", "(char *) In_VisionRoadEdgeData_st", 5)>
    funsionAlg_sfun_Outputs_wrapper((FUS_RADAR_DATA_ST *) __In_RadarData_stBUS,
			(FUS_ARS308_DATA_ST *) __In_ARS308Data_stBUS,
			(FUS_VEHICLE_DATA_ST *) __In_VehicleData_stBUS,
			(FUS_VISION_OBJ_DATA_ST *) __In_VisionObjData_stBUS,
			(FUS_EYEQ4_LANE_DATA_ST *) __In_VisionLaneData_stBUS,
			(FUS_EYEQ4_ROADEDGE_DATA_ST *) __In_VisionRoadEdgeData_stBUS,
			In_ErrorFlag,
			(FUS_OBJALG_ST *) __Out_FusionObjInfo_stBUS,
			(FUS_LANE_OUTPUT_ST *) __Out_FusionLaneInfo_stBUS,
			(FUS_ROAD_EDGE_OUTPUT_ST *) __Out_FusionRoadEdgeInfo_stBUS);

    %assign dTypeId = LibBlockOutputSignalDataTypeId(0)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *) Out_FusionObjInfo_st", "(*(FUS_OBJALG_ST *) __Out_FusionObjInfo_stBUS)", 0)>

    %assign dTypeId = LibBlockOutputSignalDataTypeId(1)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *) Out_FusionLaneInfo_st", "(*(FUS_LANE_OUTPUT_ST *) __Out_FusionLaneInfo_stBUS)", 1)>

    %assign dTypeId = LibBlockOutputSignalDataTypeId(2)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *) Out_FusionRoadEdgeInfo_st", "(*(FUS_ROAD_EDGE_OUTPUT_ST *) __Out_FusionRoadEdgeInfo_stBUS)", 2)>
    }
    void funsionAlg_sfun_Terminate_wrapper_accel(void){
    funsionAlg_sfun_Terminate_wrapper();
    }

    %closefile cFile

    %<LibAddToCommonIncludes("%<hFileName>.h")>
    %<LibAddToModelSources("%<cFileName>")>

  %else
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void funsionAlg_sfun_Start_wrapper(void);

    extern void funsionAlg_sfun_Outputs_wrapper(const FUS_RADAR_DATA_ST *In_RadarData_st,
			const FUS_ARS308_DATA_ST *In_ARS308Data_st,
			const FUS_VEHICLE_DATA_ST *In_VehicleData_st,
			const FUS_VISION_OBJ_DATA_ST *In_VisionObjData_st,
			const FUS_EYEQ4_LANE_DATA_ST *In_VisionLaneData_st,
			const FUS_EYEQ4_ROADEDGE_DATA_ST *In_VisionRoadEdgeData_st,
			const uint16_T *In_ErrorFlag,
			FUS_OBJALG_ST *Out_FusionObjInfo_st,
			FUS_LANE_OUTPUT_ST *Out_FusionLaneInfo_st,
			FUS_ROAD_EDGE_OUTPUT_ST *Out_FusionRoadEdgeInfo_st);

    extern void funsionAlg_sfun_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>

  %endif
  %%
%endfunction


%% Function: Start ============================================================
%%
%function Start(block, system) Output
   /* %<Type> Block: %<Name> */
  funsionAlg_sfun_Start_wrapper();
%endfunction
%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign pu5 = LibBlockInputSignalAddr(5, "", "", 0)
  %assign pu6 = LibBlockInputSignalAddr(6, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  
  %if IsModelReferenceSimTarget() || CodeFormat == "S-Function" || ::isRAccel
    %assign In_RadarData_stBUS_ptr = LibBlockDWorkAddr(In_RadarData_stBUS, "", "", 0)
    %assign In_ARS308Data_stBUS_ptr = LibBlockDWorkAddr(In_ARS308Data_stBUS, "", "", 0)
    %assign In_VehicleData_stBUS_ptr = LibBlockDWorkAddr(In_VehicleData_stBUS, "", "", 0)
    %assign In_VisionObjData_stBUS_ptr = LibBlockDWorkAddr(In_VisionObjData_stBUS, "", "", 0)
    %assign In_VisionLaneData_stBUS_ptr = LibBlockDWorkAddr(In_VisionLaneData_stBUS, "", "", 0)
    %assign In_VisionRoadEdgeData_stBUS_ptr = LibBlockDWorkAddr(In_VisionRoadEdgeData_stBUS, "", "", 0)
    %assign Out_FusionObjInfo_stBUS_ptr = LibBlockDWorkAddr(Out_FusionObjInfo_stBUS, "", "", 0)
    %assign Out_FusionLaneInfo_stBUS_ptr = LibBlockDWorkAddr(Out_FusionLaneInfo_stBUS, "", "", 0)
    %assign Out_FusionRoadEdgeInfo_stBUS_ptr = LibBlockDWorkAddr(Out_FusionRoadEdgeInfo_stBUS, "", "", 0)
    funsionAlg_sfun_Outputs_wrapper_accel(%<pu0>, %<In_RadarData_stBUS_ptr>, %<pu1>, %<In_ARS308Data_stBUS_ptr>, %<pu2>, %<In_VehicleData_stBUS_ptr>, %<pu3>, %<In_VisionObjData_stBUS_ptr>, %<pu4>, %<In_VisionLaneData_stBUS_ptr>, %<pu5>, %<In_VisionRoadEdgeData_stBUS_ptr>, %<pu6>, %<py0>, %<Out_FusionObjInfo_stBUS_ptr>, %<py1>, %<Out_FusionLaneInfo_stBUS_ptr>, %<py2>, %<Out_FusionRoadEdgeInfo_stBUS_ptr>);
  %else
    funsionAlg_sfun_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<pu5>, %<pu6>, %<py0>, %<py1>, %<py2>);
  %endif

  %%
%endfunction

%% Function: Terminate ========================================================
%%
%function Terminate(block, system) Output
   /* %<Type> Block: %<Name> */
  funsionAlg_sfun_Terminate_wrapper();
%endfunction

%% [EOF] funsionAlg_sfun.tlc

